---
title: "RNA Sequencing in Pulmonary Arterial Hypertension"
subtitle: "BMIN503/EPID600 Final Project"
author: "Amber Meservey"
format: html
editor: visual
number-sections: true
embed-resources: true
---

------------------------------------------------------------------------

Use this template to complete your project throughout the course. Your Final Project presentation will be based on the contents of this document. Replace the title/name above and text below with your own, but keep the headers. Feel free to change the theme and other display settings, although this is not required. I added a new sentence

## Overview {#sec-overview}

Give a brief a description of your project and its goal(s), what data you are using to complete it, and what two faculty/staff in different fields you have spoken to about your project with a brief summary of what you learned from each person. Include a link to your final project GitHub repository.

```{r}
## Pulmonary arterial hypertension (PAH). is a disease characterized by pathologically increased pressures in the pulmonary vascular bed. Despite recent treatment advances, the disease remains associated with considerable morbidity and mortality. Currently disease diagnosis and prognosis relies simultaneously on invasive hemodynamic measurements and crude clinical associations. Accordingly, there is considerable interest in developing biomarkers for use in diagnosing, distinguishing subtype, treating and following treatment response in (PAH). Our group has previously looked at plasma protein biomarkers in a small clinical trial population of participants with pulmonary arterial hypertension. The next phase of our  project expands on this prior work by examining RNA sequencing in whole blood samples collected from participants at 2 time points during the trial. I will use this project as an opportunity to work through an RNA sequencing workflow correlating RNA to basic demographic variables (age, BMI, gender) prior to work looking more specific markers of interest (6MWD, TAPSE, REVEAL score). This will allow me to work with the dataset without publishling results of interest. 

## The two faculty/staff I've met with regarding this project are Dr. Steven Kawut in Pulmonary Hypertension and Dr. Rui Feng in Biostatistics. Dr. Kawut would be considered my content expert, as he is a master clinician-researcher in PAH, as well as the lead on this clinical trial. He helps to direct appropriate clinical questions being asked of this data. Dr Rui Feng has expertise in RNA sequencing methods as well as statistical methods informing their use. She has been helpful in helping me understand how to format and use appropriate packages for this data.


```

```{r}
## https://github.com/ames78/BMIN503_Final_Project/blob/Introduction/final_project_Meservey.qmd
```

## Introduction {#sec-introduction}

Describe the problem addressed, its significance, and some background to motivate the problem. This should extend what is in the @sec-overview.

Explain why your problem is interdisciplinary, what fields can contribute to its understanding, and incorporate background related to what you learned from meeting with faculty/staff.

```{r}
## Pulmonary arterial hypertension (PAH) is a disease of pathologically elevated pressures in the pulmonary arterial bed, leading to right heart failure and ~20% mortality at 3 years. Despite availability of several pharmacologic classes of medications for PAH, treatment algorithms remain largely etiology-agnostic and anchored on disease severity as opposed to disease entity. Tools to help discriminate disease etiology and predict treatment response are needed in order to better tailor treatment algorithms and to improve patient outcomes. We anticipate that the investigation of blood-based biomarkers represents an important means to achieving this goal. Our initial step toward exploring candidate biomarkers in PAH will be a retrospective examination of the baseline and change in expression of a subset of candidate protein biomarkers in an available small clinical trial of patients with PAH.  Our findings will help direct future larger and more costly studies to test and if appropriate validate potential candidate protein biomarkers.

## Following diagnosis of PAH by right heart catheterization (RHC), it is commonly classified by specific etiology, predominately idiopathic PAH (IPAH, ~40% of cases), followed by connective tissue disease-associated PAH (CTD-PAH, ~20% of cases) and PAH associated with several less common systemic diseases. Although all forms of PAH result from aberrant vascular remodeling and vasoconstriction in the pulmonary arteries, the underlying mechanisms are incompletely understood and likely mediated by each specific disease etiology. With a 4:1 predominance in female patients and increasing evidence for a role of adipose tissue in PAH, hormonal and metabolic pathways are also thought to play significant roles in PAH pathophysiology. This complex and heterogenous mechanistic milieu alongside significant mortality, reliance on invasive means of monitoring disease and an untailored treatment armamentarium makes PAH a disease for which investigation of non-invasive biomarkers is both justifiable and urgent. 

## Thus, I will assess RNA sequencing patterns by several demographic variables of interest including: RNA expression by active treatment arm (as data derived from clinical trial of medication X), sex, age and BMI, all of which could concievably alter RNA expression. Future aims will be to identify patterns of RNA expression by specific PAH etiology, by severity metrics including TAPSE and 6MWD and response to specific treatments.


## Aim 1: Differential expression analysis by treatment arm (binary, active drug X vs placebo).
## Aim 2: Differential expression analysis by sex (binary, self-reported male vs female).
## Aim 3: Differential expression analysis by age (continuous, in years).
## Aim 4: Differential expression analysis by BMI (continuous, in kg/m2).
## Aim 5: Complete PCA, UMAP, pathway analysis, enrichment analysis for whichever aim returns most DEGs.
```

## Methods {#sec-methods}

Describe the data used and general methodological approach used to address the problem described in the @sec-introduction. Subsequently, incorporate full R code necessary to retrieve and clean data, and perform analysis. Be sure to include a description of code so that others (including your future self) can understand what you are doing and why.

```{r}
### Need to work on me (and also README.)
### Should we do lmer instead?
## Aim 1: Differential expression analysis by treatment arm (binary, active drug X vs placebo). Will use a linear model to assess whether there is a correlation between RNA expression and treatment arm, adjusting for sex and visit number in the model. I will be adjusting for both of these in all analyses because the clinical trial used a sex stratification sampling method and because there are two different visit numbers. 

## Aim 2: Differential expression analysis by sex (binary, self-reported male vs female).
## Aim 3: Differential expression analysis by age (continuous, in years).
## Aim 4: Differential expression analysis by BMI (continuous, in kg/m2).
## Aim 5: Complete PCA, UMAP, pathway analysis, enrichment analysis for whichever aim returns most DEGs.
```

## Load Pacakges

```{r, echo = FALSE}
## loading necessary packages:
library(dplyr)
library(broom)
library(limma)
library(ggplot2)
library(tidyverse)
library(ggrepel)
library(reshape2)
library(lme4)
library(lmerTest)

```

## Load Files

```{r, echo = FALSE}
## Loading necessary files
## 3 Files: RNAdemo=demographics, RNAids= ID numbers for labelling purposes, TPMcounts= normalized RNA expression data. 
RNAdemo <- read.csv("/Users/ambermes/Desktop/p2.csv")
RNAids <- read.csv("/Users/ambermes/Desktop/pid.csv")
TPMcounts <- read.csv("/Users/ambermes/Desktop/TPM_values.csv")
```

## Transpose and clean RNA count sheet

```{r}
## TPM dataframe is currently gene names on rows, kit_number on columns. 
## Transpose so that kit_numbers are the rows and row names. 

TPMcounts_t <- as.data.frame(t(TPMcounts))
## V1/V2 currently column name, gene name in column 1. Kit_number = row names. 
## Replace V1/V2 column name with gene name in column 1. 
colnames(TPMcounts_t) <- TPMcounts_t[1,]
## Remove redundant row with gene name now that its the column title. 
TPMcounts_t <- TPMcounts_t[-1,]
  

```

## Add kit_numbers to demographics

```{r}
## Currently "RNAdemo" has 84 observations for patients, whereas "RNAids" has 164 observations for 2 visits * 84 patients with some missingness. 
## In order to add kit_number to RNAdemo without losing info, I will duplicate the patient info so as to add kit_numbers corresponding to visit_num

RNAdemodup <- RNAdemo[rep(1:nrow(RNAdemo), each = 2),]
RNAdemodup$visit_num <- rep(c(1,2), nrow(RNAdemo))

## Change visit_num = 2 to 3 to match other coding. 
RNAdemodup$visit_num <- ifelse(RNAdemodup$visit_num == 2, 3, RNAdemodup$visit_num)
## Move visit_num up front. 
RNAdemodup <- RNAdemodup[, c("visit_num", setdiff(names(RNAdemodup), "visit_num"))]

## Only save the variables I plan to work with (too many variables):
# Subset only the desired columns
clininfo <- RNAdemodup[, c("pt", "visit_num", "age_der", "gender", "arm", "BMI")]

clininfo <- merge(clininfo, RNAids[, c("pt", "visit_num", "kit_number")],
                  by = c("pt", "visit_num"), 
                  all.x = TRUE)

clininfo <- clininfo[, c("kit_number", setdiff(names(clininfo), "kit_number"))]


```

## Remove kits that didn't meet QC and NAs (n = 6+ 4= 10). Complete Case Analysis.

```{r}
## QC - kit numbers that did not meet QC 
kit_numbers_to_remove <- c("1102", "1105", "1110", "1111", "1503", "1607")
clininfo <- clininfo |>
  filter(!kit_number %in% kit_numbers_to_remove)

## Leaves me with 162 rows (6 removed)- 4 NAs- remove since we wont have RNA data for these non-existant kit_numbers. 
sum(is.na(clininfo$kit_number))
clininfo <- clininfo[!is.na(clininfo$kit_number),]
## Leaves 158 obs. 
```

## Log transform TPM counts

```{r}

## Visualize TPM data
# Combine all values into a single numeric vector
all_values <- as.numeric(unlist(TPMcounts_t))
ggplot(data.frame(all_values), aes(x = all_values)) +
  geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
  labs(title = "Original TPM Data", x = "TPM Values", y = "Frequency") +
  theme_minimal()

## Many zeros, add constant 1 to avoid log(0)
## Remove gene name
TPMcounts_t <- TPMcounts_t[-nrow(TPMcounts_t),]

# make numeric for log transformation 
TPMcounts_t[] <- lapply(TPMcounts_t, function(x) as.numeric(as.character(x)))

## log transform TPM to work with limma, stabilize variance
TPMcounts_t_log2 <- log2(TPMcounts_t + 1)


## Visualize log data: 
all_values_log <- as.numeric(unlist(TPMcounts_t_log2))
ggplot(data.frame(all_values_log), aes(x = all_values_log)) +
  geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
  labs(title = "Log2 Transformed TPM Distribution", x = "TPM Values", y = "Frequency") +
  theme_minimal()
```

## Combine log-TPM RNA expression with clinical info.

```{r}
## Add kit_number:
## Extract kit_number from row names into a column for merging purposes. 
## Make kit_number the first column. 
TPMcounts_t_log2$kit_number <- rownames(TPMcounts_t_log2)
TPMcounts_t_log2 <- TPMcounts_t_log2[, c("kit_number", setdiff(colnames(TPMcounts_t_log2), "kit_number"))]


# Remove x from kit_number in TPMsheet to match clinical. 
TPMcounts_t_log2$kit_number <- gsub("^X", "", TPMcounts_t_log2$kit_number)

## Merge log- TPM RNA expression with clinical info: 
merged <- merge(clininfo, TPMcounts_t_log2, by = "kit_number")

# Recode arm from A/B to 1/2:
merged$arm <- ifelse(merged$arm == "A", 1, 
                           ifelse(merged$arm == "B", 2, merged$arm))
write.csv(merged, "merged.csv")

```

## Update Expression Matrix for Use in DEG

```{r}

## Format logTPMcounts to expression matrix (gene name as row names)
TPMcounts$Gene.name <- NULL
rownames(TPMcounts) <- TPMcounts$ID
TPMcounts$ID <- NULL
TPMcounts_log <- log2(TPMcounts + 1)
colnames(TPMcounts_log) <- gsub("^X", "", colnames(TPMcounts_log))
logexpressionmatrix <- TPMcounts_log

```

## Analysis 1: DEG for Treatment Arm Adjusted by Sex and Visit

```{r, echo= FALSE}
## Does expression of any RNA transcripts differ by treatment arm 1 vs. 2?
## Define Variables of Interest, Analysis DF
treatment <- factor(merged$arm)
gender <- factor(merged$gender)
visit <- factor(merged$visit_num)
analysis1 <- model.matrix (~ treatment + gender + visit)
colnames(analysis1) <- c("Intercept", "Treatment2vs1", "Gender2vs1", "Visit3vs1")

## Fit Linear Model
fit_f <- lmFit(logexpressionmatrix, analysis1)

## Apply Empirical Bayes Moderation: Stabilizes variance 
fit_f <- eBayes(fit_f)

## Fit Results
results_f <- topTable(fit_f, coef = "Treatment2vs1", adjust.method = "BH", number = Inf)

## Filter Significance by Benjamini-Hochberg Correction for Multiple Comparisons
results_f$Significant <- ifelse(results_f$adj.P.Val <= 0.05, "Significant", "Not Significant")


## Volcano Plot for Treatment Arm:  
ggplot(results_f, aes(x = logFC, y = -log10(P.Value), color = Significant)) +
  geom_point(alpha = 0.8, size = 2) +
  scale_color_manual(values = c("gray", "darkred")) + 
  labs(
    title = "Volcano Plot: Differential Expression by Treatment Arm",
    x = "Log2 Fold Change",
    y = "-Log10 P-value"
  ) +
  theme_minimal() +
  theme(legend.title = element_blank())

```

## Analysis 2: DEG for

## Results {#sec-results}

Describe your results and include relevant tables, plots, and code/comments used to obtain them. You may refer to the @sec-methods as needed. End with a brief conclusion of your findings related to the question you set out to address. You can include references if you'd like, but this is not required.

## Analysis 1: RNA by Treatment Arm

```{r}
## Analysis 1: No Significantly Differentially Expressed RNA Transcripts by Treatment Arm, Adjusting for Gender and Visit. 

## Volcano Plot for Treatment Arm:  
ggplot(results_f, aes(x = logFC, y = -log10(adj.P.Val), color = Significant)) +
  geom_point(alpha = 0.8, size = 2) +
  scale_color_manual(values = c("gray", "cornflowerblue")) +  # Gray for not significant, red for significant
  labs(
    title = "Differential Expression by Treatment Arm",
    x = "Log2 Fold Change",
    y = "-Log10 BH Adjusted P-value"
  ) +
  theme_minimal() +
  theme(legend.title = element_blank())
```

## Analysis 2: Differential Expression by Sex Adjusted by Visit

```{r}
## Does expression of any RNA transcripts differ by sex (binary, self-reported male vs. female)?
## Male = 1/Female =2 
## Define Variables of Interest, Analysis DF
treatment <- factor(merged$arm)
gender <- factor(merged$gender)
visit <- factor(merged$visit_num)
analysis2 <- model.matrix (~ gender + visit)
colnames(analysis2) <- c("Intercept", "Gender2vs1", "Visit3vs1")


## Fit Linear Model
fit_g2 <- lmFit(logexpressionmatrix, analysis2)

## Apply Empirical Bayes Moderation: Stabilizes variance 
fit_g2 <- eBayes(fit_g2)

## Fit Results
results_g2<- topTable(fit_g2, coef = "Gender2vs1", adjust.method = "BH", number = Inf)

## Filter Significance by Benjamini-Hochberg Correction for Multiple Comparisons
results_g2$Significant <- ifelse(results_g2$adj.P.Val <= 0.05, "Significant", "Not Significant")

## Color Coding:
results_g2$colorcoding <- ifelse(
  results_g2$Significant == "Significant" & results_g2$logFC > 0, "Pink (Overrepresented in Female)",
  ifelse(results_g2$Significant == "Significant" & results_g2$logFC < 0, "Blue (Overrepresented in Male)", "Not Significant")
)

## Volcano Plot for Sex:  
ggplot(results_g2, aes(x = logFC, y = -log10(adj.P.Val), color = colorcoding)) +
  geom_point(alpha = 0.8, size = 2) +
  scale_color_manual(
    values = c(
      "Pink (Overrepresented in Female)" = "hotpink4",
      "Blue (Overrepresented in Male)" = "cornflowerblue",
      "Not Significant" = "gray"
  ) 
  ) +
  labs(
    title = "Differential Expression by Sex",
    x = "Log2 Fold Change", 
    y = "-Log10 BH-Adjusted P-value"
  ) +
  theme_minimal() +
  theme(
    legend.title = element_blank(), 
    legend.position = "right")

```

## Aim 3: Differential Expression by Age Adjusted by Sex and Visit

```{r}
## Does expression of any RNA transcripts differ by age (continuous, in years)?
## Define Variables of Interest, Analysis DF
age <- merged$age
gender <- factor(merged$gender)
visit <- factor(merged$visit_num)
analysis3 <- model.matrix (~ age + gender + visit)
colnames(analysis3) <- c("Intercept", "Age", "Gender2vs1", "Visit3vs1")


## Fit Linear Model
fit_h3 <- lmFit(logexpressionmatrix, analysis3)

## Apply Empirical Bayes Moderation: Stabilizes variance 
fit_h3 <- eBayes(fit_h3)

## Fit Results
results_h3<- topTable(fit_h3, coef = "Age", adjust.method = "BH", number = Inf)

## Filter Significance by Benjamini-Hochberg Correction for Multiple Comparisons
results_h3$Significant <- ifelse(results_h3$adj.P.Val <= 0.05, "Significant", "Not Significant")

## Color Coding:
results_h3$colorcoding <- ifelse(
  results_h3$Significant == "Significant" & results_h3$logFC > 0, "Pink (Overrepresented in Young)",
  ifelse(results_h3$Significant == "Significant" & results_h3$logFC < 0, "Blue (Overrepresented in Old)", "Not Significant")
)

## Volcano Plot for Age:  
ggplot(results_h3, aes(x = logFC, y = -log10(adj.P.Val), color = colorcoding)) +
  geom_point(alpha = 0.8, size = 2) +
  scale_color_manual(
    values = c(
      "Pink (Overrepresented in Young)" = "hotpink4",
      "Blue (Overrepresented in Old)" = "cornflowerblue",
      "Not Significant" = "gray"
  ) 
  ) +
  labs(
    title = "Differential Expression by Age",
    x = "Log2 Fold Change", 
    y = "-Log10 BH-Adjusted P-value"
  ) +
  theme_minimal() +
  theme(
    legend.title = element_blank(), 
    legend.position = "right")
```

## Analysis 4: Differential Expression by BMI Adjusted by Sex and Visit

```{r}
## Does expression of any RNA transcripts differ by BMI (continuous, in kg/m2)?
## Define Variables of Interest, Analysis DF
bmi <- merged$BMI
gender <- factor(merged$gender)
visit <- factor(merged$visit_num)
analysis4 <- model.matrix (~ bmi + gender + visit)
colnames(analysis4) <- c("Intercept", "BMI", "Gender2vs1", "Visit3vs1")

## Fit Linear Model
fit_i4 <- lmFit(logexpressionmatrix, analysis4)

## Apply Empirical Bayes Moderation: Stabilizes variance 
fit_i4 <- eBayes(fit_i4)

## Fit Results
results_i4<- topTable(fit_i4, coef = "BMI", adjust.method = "BH", number = Inf)

## Filter Significance by Benjamini-Hochberg Correction for Multiple Comparisons
results_i4$Significant <- ifelse(results_i4$adj.P.Val <= 0.05, "Significant", "Not Significant")

## Color Coding:
results_i4$colorcoding <- ifelse(
  results_i4$Significant == "Significant" & results_i4$logFC > 0, "Pink (Overrepresented in Lower BMIs)",
  ifelse(results_i4$Significant == "Significant" & results_i4$logFC < 0, "Blue (Overrepresented in Higher BMIs)", "Not Significant")
)

## Volcano Plot for Age:  
ggplot(results_i4, aes(x = logFC, y = -log10(adj.P.Val), color = colorcoding)) +
  geom_point(alpha = 0.8, size = 2) +
  scale_color_manual(
    values = c(
      "Pink (Overrepresented in Lower BMIs)" = "hotpink4",
      "Blue (Overrepresented in Higher BMIs)" = "cornflowerblue",
      "Not Significant" = "gray"
  ) 
  ) +
  labs(
    title = "Differential Expression by BMI",
    x = "Log2 Fold Change", 
    y = "-Log10 BH-Adjusted P-value"
  ) +
  theme_minimal() +
  theme(
    legend.title = element_blank(), 
    legend.position = "right")
```

```{r}

```

## Conclusion

This the conclusion. The @sec-results can be invoked here.
